datasource db {
    provider = "sqlite"
    url      = env("SQLITE_URI")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["extendedIndexes"]
}

model Account {
    id                String    @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Video {
    id              String          @id @default(cuid())
    user            String
    videoId         String
    title           String
    description     String
    publishedAt     DateTime
    image_thumbnail String
    project         Project[]
    search          VideoSearch[]
}

model VideoSearch {
    id              String   @id @default(cuid())
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    user            String
    query           String   @unique
    videos          Video[]
}

model Project {
    id              String   @id @default(cuid())
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    name            String
    slug            String   @unique
    description     String
    image_thumbnail String
    image_cover     String
    user            String
    archived        Boolean  @default(false)
    published       Boolean  @default(false)
    videos          Video[]

    @@index([user, archived, createdAt(sort: Desc)])
}

model ChannelStats {
    id                      String   @id @default(cuid())
    createdAt               DateTime @default(now())
    updatedAt               DateTime @updatedAt
    user                    String   @unique
    title                   String
    description             String
    publishedAt             DateTime
    subscriberCount         Int
    videoCount              Int
    views                   Int
    estimatedMinutesWatched Int
    comments                Int
    likes                   Int
    dislikes                Int
    shares                  Int
}
